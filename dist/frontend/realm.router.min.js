"use strict";function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(r,t,n){return t&&e(r.prototype,t),n&&e(r,n),r}}();!function(e){e.isNode,e.realm}(function(e){var r="undefined"!=typeof exports;return{isNode:r,realm:r?require("realm-js"):window.realm}}()),function(e){var r=(e.isNode,e.realm);r.module("realm.router.BridgeRequest",[],function(){var e,r=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"connect",value:function(e,r,t){for(var n=[],o=0;o<t.length;o++)n[o]=t[o];return new Promise(function(t,o){var i=new window.XMLHttpRequest;i.open("POST","/_realm_/bridge/",!0),i.setRequestHeader("Content-Type","application/json");var a={bridge:e,method:r,args:n};i.onreadystatechange=function(){if(4==i.readyState){var e=this.response;if(200===this.status)return t(JSON.parse(e));if(e.indexOf("html")>-1){var r=document.createElement("div");r.style="overflow-y:scroll;position:fixed; top:0; z-index:9999; background-color:white; left:0;width:100%;height:100%",r.innerHTML=e,document.body.appendChild(r)}return o({status:this.status,response:e})}},i.send(a?JSON.stringify(a):"{}")})}}]),e}();return e=r}),r.module("realm.router.test.MyFirstBridge",["realm.router.BridgeRequest"],function(e){var r;return r={getSomething:function(){return e.connect("realm.router.test.MyFirstBridge","getSomething",arguments)}}})}(function(e){var r="undefined"!=typeof exports;return{isNode:r,realm:r?require("realm-js"):window.realm}}());